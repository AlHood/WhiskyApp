{"version":3,"sources":["webpack:///webpack/bootstrap ec24d18b4a2d280f540b","webpack:///./src/app.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ec24d18b4a2d280f540b\n **/","//this is app.js\n\n\n// Google Map Stuff\n\nvar MapWrapper = function(container, center, zoom){\n  this.googleMap = new google.maps.Map(container, {\n    center: center,\n    zoom: zoom\n  });\n};\n\nMapWrapper.prototype = {\n  addMaker: function(coords){\n    var marker = new google.maps.Marker({\n      position: coords,\n      map: this.googleMap\n    });\n  }\n}\n//this function will make a call to our api, get all distilleries and use the callback provide to drop markers for them all on the mainmap.\nvar makeRequest = function(url, callback){\n  var request = new XMLHttpRequest();\n  request.open(\"GET\", url);\n  request.onload = (function(){\n    if(this.status !== 200){\n      return;\n    }\n    var jsonString = this.responseText;\n    var whisky_distilleries = JSON.parse(jsonString);\n    for(distillery of whisky_distilleries){\n      callback(distillery.coords);\n    }\n  });\n  request.send();\n}\n\n//the below function creates the map and puts it in the container, uses a an inner function to call addmarker on the mainmap and will take in coords when it is called, coords are provided when this function is used in makeRequest\nvar showMap = function(){\n  var urlToOurApi = \"http://localhost:3000/api/locations\";\n  var container = document.getElementById(\"GoogleMap\");\n  var center = {\n    lat: 56.490671,\n    lng: -4.202646\n  };\n  var zoom = 7;\n  var mainMap = new MapWrapper(container, center, zoom);\n  var urlToOurApi = \"http://localhost:3000/api/locations\";\n  makeRequest(urlToOurApi, (function(coords) {\n    mainMap.addMaker(coords);\n  }));\n}\n\nvar app = function(){\n  //calls show map, this populates map and drops pins. we may look at moving some of this out to seperate models and views.\n  showMap();\n};\n\nwindow.onload = app;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app.js\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":""}